<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.    
-->
<document>

 <properties>
  <title>Apache James Server 3 - Antispam Configuration</title>
 </properties>

<body>

  <section name="Antispam Configuration">
  
    <p>Apache James Server Anti-Spam system can be configured via three main different mechanisms:</p>
    
    <ul>
       <li>SMTP Hooks; see <a href="https://github.com/apache/james-project/tree/master/server/app/src/main/resources/smtpserver.xml">examples</a>.
       It enables Spam mail rejection before the mail queue is reached.</li>
       <li>Mailets; see <a href="https://github.com/apache/james-project/tree/master/server/app/src/main/resources/mailetcontainer.xml">examples</a>.
       It enables detecting Spam while processing the mail within the mailet container.</li>
       <li>Mailbox listeners; see <a href="https://github.com/apache/james-project/blob/master/dockerfiles/run/guice/cassandra/destination/conf/listeners.xml">example</a>.
       It enables direct feedback to SpamAssassin, based on user action. Moving a mail to the <i>Spam</i> mailbox will report it as Spam, while email not in
       the Spam mailbox will be reported as Ham.</li>
    </ul>

    <subsection name="AntiSpam SMTP Hooks">
  
      <p>"FastFail" SMTP Hooks acts to reject before spooling
          on the SMTP level. SpamAssasin hook can be used as a fastfail hook, therefore
          SpamAssassin must run as a server on the same machine as the Apache James Server.</p>
      
      <p>SMTP Hooks for non-existent users, DSN filter, domains with invalid MX record, 
          can also be configured.</p>
          
    </subsection>

    <subsection name="AntiSpam Mailets">
    
    <ul>
      <li>Black listing Mailet. <b>This feature is experimental.</b></li>
      <li>Grey listing Mailet <b>This feature is experimental.</b></li>
      <li>SpamAssassin Mailet is designed to classify the messages as spam or not 
          with an configurable score threshold. Usually a message will only be 
          considered as spam if it matches multiple criteria; matching just a single test 
          will not usually be enough to reach the threshold. Note that Spam is reported on a
          per user bases. As a result of this mailet execution, the <i>org.apache.james.spamassassin.flag</i>
          mail header will have the values <i>Yes</i> or <i>No</i>, and the <i>org.apache.james.spamassassin.status</i>
          will also contain the Spam level as well as the spam threshold, for instance <i>No, hits=3 required=5</i>.</li>
      <li>BayesianAnalysis in the Mailet uses Bayesian probability to classify mail as 
          spam or not spam. It relies on the training data coming from the usersâ€™ judgment. 
          Users need to manually judge as spam and send to spam@thisdomain.com, oppositely, 
          if not spam they then send to not.spam@thisdomain.com. BayesianAnalysisfeeder learns 
          from this training dataset, and build predictive models based on Bayesian probability. 
          There will be a certain table for maintaining the frequency of Corpus for keywords 
          in the database. Every 10 mins a thread in the BayesianAnalysis will check and update 
          the table. Also, the correct approach is to send the original spam or non-spam 
          as an attachment to another message sent to the feeder in order to avoid bias from the 
          current sender's email header. <b>This feature is experimental.</b></li>
    </ul>
    
    </subsection>

      <subsection name="spamassassin.properties">
        <p>This a a Guice specific configuration file used to configure the specific mailbox listener.
        This optional configuration file is however required when the SpamAssassin mailet is configured</p>

          <br/>

          <dl>
              <dt><strong>spamassassin.host</strong></dt>
              <dd>Host SpamAssassin can be reached on.</dd>

              <dt><strong>spamassassin.port</strong></dt>
              <dd>Port used to contact SpamAssassin.</dd>
          </dl>

          <br/>

          <p>As part of our tests, we set up a SpamAssassin server (inside docker) on top of Postgres SQL database. This set up
          enables per-user Spam reporting, and is the SpamAssassin set up James is tested against. Installation details can
          <a href="https://github.com/apache/james-project/tree/master/server/container/util/src/test/resources/docker/spamassassin">be seen there</a>.</p>

      </subsection>
    
  </section>

</body>

</document>
