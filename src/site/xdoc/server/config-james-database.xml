<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<document>

    <properties>
        <title>Apache James Server 3 - JMX Configuration</title>
    </properties>

    <body>

        <section name="JPA database configuration">

            <p>This section applies for Spring wiring when JPA backend is chose, as well as Guice JPA's wirings.</p>

            <subsection name="james-database.properties">

                <p>This configuration file is only relevant when using JPA, with Spring or Guice.</p>

                <p>Consult <a href="https://github.com/apache/james-project/tree/master/server/app/src/main/resources/james-database.properties">james.properties</a> in GIT to get some examples and hints.</p>

                <p>The database connection in database.properties</p>

                <p>James has the capacity to use a JDBC-compatible database for storage of both message and user
                    data. This section explains how to configure James to utilize a database for storage.</p>

                <p>To avoid vendor-specific issues, the JPA (Java Persistence Architecture) is used (using the Apache OpenJPA implementation).</p>

                <p>There must be a database instance accessible from the James server.  An account with appropriate
                    privileges (select, insert, delete into tables, and on initial startup creation of tables) and
                    with sufficient quota for the data to be inserted into the database must be available.</p>

                <p>Also, since James will use JDBC to access the database, an appropriate JDBC driver must be
                    available for installation. You can place the JDBC driver jar in the conf/lib folder, it will
                    be automatically loaded.</p>

                <dl>
                    <dt><strong>database.driverClassName</strong></dt>
                    <dd>he class name of the database driver to be used.</dd>
                    <dt><strong>database.url</strong></dt>
                    <dd>The JDBC connection URL for your database/driver.</dd>
                    <dt><strong>database.username</strong></dt>
                    <dd>The user id of the database account to be used by this connection.</dd>
                    <dt><strong>database.password</strong></dt>
                    <dd>The password of the database account to be used by this connection.</dd>
                    <dt><strong>vendorAdapter.database</strong></dt>
                    <dd>Supported adapters are: DB2, DERBY, H2, HSQL, INFORMIX, MYSQL, ORACLE, POSTGRESQL, SQL_SERVER, SYBASE .</dd>
                    <dt><strong>openjpa.streaming</strong></dt>
                    <dd>true or false - Use streaming for Blobs. This is only supported on a limited set of databases atm. You
                        should check if its supported by your DB before enable it. See <a href="http://openjpa.apache.org/builds/latest/docs/manual/ref_guide_mapping_jpa.html">http://openjpa.apache.org/builds/latest/docs/manual/ref_guide_mapping_jpa.html</a> (#7.11. LOB Streaming).</dd>
                </dl>

                <p>Note for postgresql databases: Add standard_conforming_strings=off to your postgresql.xml, otherwise you
                    will get ""Invalid escape string Hint: Escape string must be empty or one character. {prepstmnt 174928937
                    SELECT t0.mailbox_id, t0.mailbox_highest_modseq, t0.mailbox_last_uid, t0.mailbox_name, t0.mailbox_namespace,
                    t0.mailbox_uid_validity, t0.user_name FROM public.james_mailbox t0 WHERE (t0.mailbox_name LIKE ?
                    ESCAPE '\\' AND t0.user_name = ? AND t0.mailbox_namespace = ?) [params=?, ?, ?]} [code=0, state=22025]"</p>

            </subsection>

        </section>

    </body>

</document>
